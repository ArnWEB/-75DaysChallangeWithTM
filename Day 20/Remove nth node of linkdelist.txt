/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int count=0;
        ListNode temp=head;
        while(temp!=null)
        {
            count++;
            temp=temp.next;
        }
        ListNode prev=null;
        ListNode temp2=head;
        int c=0;
        if(count==n)
            return head.next;
        if(count==1)
            return null;
        
        
        while(temp2!=null)
        {
            c++;
            if(count-c+1==n)
            {
                prev.next=temp2.next;
                break;
            }
            
            prev=temp2;
            temp2=temp2.next;
            
        }
        return head;
        
    }
}