/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        ArrayList<String> r=new ArrayList<>();
        String s="";
        binaryTreeP(root,r,s);
        return r;
        
    }
    public void binaryTreeP(TreeNode root,ArrayList<String> res,String str)
    {
        if(root==null)
        {
            
            return ;
        }
        if(root.left==null && root.right==null)
        {
            res.add(str+root.val);
        }
        str+=root.val+"->";
        binaryTreeP(root.left,res,str);
        binaryTreeP(root.right,res,str);
    }
}