class RandomizedCollection {
    private HashMap<Integer, HashSet<Integer>> hashMap;
    int[] arr;
    int size;
    Random rand;
    
    public RandomizedCollection() {
        hashMap = new HashMap<>();
        size = 0;
        arr = new int[200000];
        rand = new Random();
    }
    
    public boolean insert(int val) {
        boolean exists = true;
        if(!hashMap.containsKey(val)){
            exists = false;
            hashMap.put(val, new HashSet<Integer>());
        }
        hashMap.get(val).add(size);
        arr[size] = val;
        size++;
        return !exists;
    }

    public boolean remove(int val) {
        if(!hashMap.containsKey(val))
            return false;
        int idx = hashMap.get(val).iterator().next();
        int lastVal = arr[size - 1];
        if (lastVal != val){
            hashMap.get(lastVal).add(idx);
            hashMap.get(val).remove(idx);
        }
        hashMap.get(lastVal).remove(size - 1);
        arr[idx] = lastVal;
        if(hashMap.get(val).isEmpty())
            hashMap.remove(val);
        size--;
        return true;
    }

    public int getRandom() {
        int idx = rand.nextInt(size);
        return arr[idx];
    }
}